import telebot
import requests
import dbworker
import psycopg2
import config
import datetime
import os
import random
from telebot import types
from config import Token, admins

DATABASE_URL = os.environ['DATABASE_URL']

con = psycopg2.connect(DATABASE_URL, sslmode='require')
# con = psycopg2.connect(
#     database="postgres",
#     user="postgres",
#     password="gs",
#     host="127.0.0.1",
#     port="5432"
# )
cur = con.cursor()

bot = telebot.TeleBot(Token)

cur.execute(f'''CREATE TABLE IF NOT EXISTS events
                                 (Id Text,
                                 Name TEXT,
                                 Text TEXT,
                                 ImgName TEXT, 
                                 Price TEXT);''')
con.commit()
cur.execute(f'''CREATE TABLE IF NOT EXISTS claims
                                 (Id TEXT,
                                 ChatId TEXT,
                                 Name TEXT,
                                 Date TEXT,
                                 State TEXT,
                                 NameUser TEXT, 
                                 Price INT,
                                 TextC TEXT);''')
con.commit()


claim_a = {}
claim_p = {}
new_event = {}


@bot.message_handler(commands=['start'])
def start(message):
    if message.chat.id in admins:
        cur.execute(f'''CREATE TABLE IF NOT EXISTS p{message.chat.id}
                                                             (Name TEXT,
                                                             Date TEXT,
                                                             State TEXT,
                                                             NameUser TEXT, 
                                                             Price INT, 
                                                             AnswerAdmin TEXT);''')
        con.commit()
        buttons = [
            types.InlineKeyboardButton(text="–ü—Ä–æ–≥—É–ª–∫–∏", callback_data="ClbEvents-A"),
            types.InlineKeyboardButton(text="–í—Å–µ –∑–∞—è–≤–∫–∏", callback_data="ClbClaims-A"),
            types.InlineKeyboardButton(text="–ë–æ—Ç", callback_data="ClbBot-A")
        ]
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        keyboard.add(*buttons)
        bot.send_message(message.chat.id, '–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –ü–æ –∫–Ω–æ–ø–∫–µ "–ë–æ—Ç" –º–æ–∂–Ω–æ –∑–∞–π—Ç–∏ –≤ –±–æ—Ç–∞, –∫–∞–∫ –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å...',
                             reply_markup=keyboard)
    else:
        cur.execute(f'''CREATE TABLE IF NOT EXISTS p{message.chat.id}
                                                     (Name TEXT,
                                                     Date TEXT,
                                                     State TEXT,
                                                     NameUser TEXT, 
                                                     Price INT, 
                                                     AnswerAdmin TEXT);''')
        con.commit()
        cur.execute("SELECT * FROM events")
        rows = cur.fetchall()
        EventsNames = ''
        for i in range(len(rows)):
            EventsNames += f'{rows[i][1]}\n'
        buttons = [
            types.InlineKeyboardButton(text="–ü—Ä–∞–π—Å", callback_data="ClbEvents"),
            types.InlineKeyboardButton(text="–ü–æ–º–æ—â—å", callback_data="ClbHelp"),
            types.InlineKeyboardButton(text="–ú–æ–∏ –∑–∞—è–≤–∫–∏", callback_data="ClbClaims")
        ]
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        keyboard.add(*buttons)
        bot.send_message(message.chat.id, f' üëãüèª <b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –Ø GAGRASUPbot.</b>'
                                          f' –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –Ω–æ–≤—ã–π —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –º–∏—Ä –º–æ—Ä—Å–∫–∏—Ö –ø—Ä–æ–≥—É–ª–æ–∫. '
                                          f'–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –Ω–∞—à–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–ª—è —Å–µ–±—è —Å–∞–º–æ–µ –ª—É—á—à–µ–µ'
                                          f'\n\n <b>–°–∞–ø–±–æ—Ä–¥–∏–Ω–≥</b> <em>‚Äî –∏–º–µ–Ω–Ω–æ —Ç–æ—Ç –≤–∏–¥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–π '
                                          f'–ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è –∞–±—Å–æ–ª—é—Ç–Ω–æ –≤—Å–µ–º, —ç—Ç–æ –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –≤–∏–¥ '
                                          f'–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ –¥—É—à–µ –∏ –≤–∑—Ä–æ—Å–ª—ã–º, –∏ –¥–µ—Ç—è–º. –ú–Ω–æ–≥–∏–µ —Ö–æ—Ç—è—Ç '
                                          f'–ø—Ä–æ—Å—Ç–æ –∫–∞—Ç–∞—Ç—å—Å—è –ø–æ –º–æ—Ä—é, –ø–æ —Ä–µ–∫–µ, –≤—Å—Ç—Ä–µ—á–∞—Ç—å —Ä–∞—Å—Å–≤–µ—Ç—ã –∏ –∑–∞–≥–æ—Ä–∞—Ç—å. '
                                          f'\n–ù–∏–∫–∞–∫–æ–≥–æ —ç–∫—Å—Ç—Ä–∏–º–∞.</em>'
                                          f'\n\n–ò–ù–°–¢–†–£–ö–¢–ê–ñ –ò –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨'
                                          f'\n –£ –Ω–∞—Å —Ç–æ–ª—å–∫–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏ –±—Ä–µ–Ω–¥–æ–≤—ã–µ —Å–∞–ø–±–æ—Ä–¥—ã Stormline, Bombitto –∏ –¥—Ä—É–≥–∏–µ.'
                                          f'\n\n –ì–∏–¥ –ø—Ä–æ–≤–æ–¥–∏—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂ –ø–µ—Ä–µ–¥ —Å–ø–ª–∞–≤–æ–º, –≤—ã–¥–∞–µ—Ç —Å–ø–∞—Å–∞—Ç–µ–ª—å–Ω—ã–µ '
                                          f'–∂–∏–ª–µ—Ç—ã, –≤–æ–¥–æ–Ω–µ–ø—Ä–æ–Ω–∏—Ü–∞–µ–º—ã–µ —á–µ—Ö–ª—ã –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤. '
                                          f'\n\n <em>*–ü—Ä–∏ –Ω–µ–±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã—Ö –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö –≤–æ–∑–º–æ–∂–µ–Ω –ø–µ—Ä–µ–Ω–æ—Å –ø—Ä–æ–≥—É–ª–∫–∏</em>'
                                          f'\n\n<b>–ü–†–û–ö–ê–¢ ‚Ä¢ –ü–†–û–ì–£–õ–ö–ò ‚Ä¢ –ò–ù–î–ò–í–ò–î–£–ê–õ–¨–ù–´–ï –¢–£–†–´</b>'
                                          f'\n\n<code>–Ω–∞–∂–º–∏—Ç–µ ¬´–ü—Ä–∞–π—Å¬ª –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≥—É–ª–∫—É</code>', parse_mode='html', reply_markup=keyboard)


@bot.message_handler(commands=['price_list'])
def price_list(message):
    cur.execute(f'''CREATE TABLE IF NOT EXISTS p{message.chat.id}
                                                                 (Name TEXT,
                                                                 Date TEXT,
                                                                 State TEXT,
                                                                 NameUser TEXT, 
                                                                 Price INT, 
                                                                 AnswerAdmin TEXT);''')
    con.commit()
    cur.execute("SELECT * FROM events")
    rows = cur.fetchall()
    buttons = [types.InlineKeyboardButton(text=f"{rows[i][1]}", callback_data=f"ClbEvents{rows[i][0]}") for i in
               range(len(rows))]
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(*buttons)
    keyboard.add(types.InlineKeyboardButton(text=f"–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ¬ª", callback_data=f"ClbStart"))
    bot.send_message(chat_id=message.chat.id, text='<b>–ü–†–û–ì–£–õ–ö–ò. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç:</b>', parse_mode='html',
                          reply_markup=keyboard)


@bot.message_handler(commands=['help'])
def help(message):
    cur.execute(f'''CREATE TABLE IF NOT EXISTS p{message.chat.id}
                                                                     (Name TEXT,
                                                                     Date TEXT,
                                                                     State TEXT,
                                                                     NameUser TEXT, 
                                                                     Price INT, 
                                                                     AnswerAdmin TEXT);''')
    con.commit()
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(types.InlineKeyboardButton(text='WhatsApp', url='https://wa.me/+79407120912'),
                 types.InlineKeyboardButton(text='Telegram', url='tg://resolve?domain=simeon_kolchin'),
                 types.InlineKeyboardButton(text='Instagram', url='tg://resolve?domain=simeon_kolchin'),
                 types.InlineKeyboardButton(text=f"–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ¬ª", callback_data=f"ClbStart"))
    bot.send_message(chat_id=message.chat.id, text='–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º:', reply_markup=keyboard)


@bot.message_handler(commands=['my_claims'])
def my_claims(message):
    cur.execute(f'''CREATE TABLE IF NOT EXISTS p{message.chat.id}
                                                                     (Name TEXT,
                                                                     Date TEXT,
                                                                     State TEXT,
                                                                     NameUser TEXT, 
                                                                     Price INT, 
                                                                     AnswerAdmin TEXT);''')
    con.commit()
    cur.execute(f"SELECT * FROM p{message.chat.id}")
    rows = cur.fetchall()
    buttons = [types.InlineKeyboardButton(text=f"{rows[i][0]} ({'.'.join(rows[i][1].split()[0].split('-')[::-1])})",
                                          callback_data=f"ClbEvents{rows[i][1].split()[0]}_{rows[i][1].split()[1]}")
               for i in
               range(len(rows))]
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(*buttons)
    keyboard.add(types.InlineKeyboardButton(text=f"–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ¬ª", callback_data=f"ClbStart"))
    bot.send_message(chat_id=message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—É–ª–∫–∏:', reply_markup=keyboard)


# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ----- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ----- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ----- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.SendClaim.value)
def user_age(message):
    date = datetime.datetime.now()
    user_name = message.chat.username
    cur.execute(f'''INSERT INTO p{message.chat.id} (Name, Date, State, NameUser, Price, AnswerAdmin) VALUES 
                                                                           ('{claim_p[message.chat.id, 'name_event']}', 
                                                                           '{date}', 
                                                                           '–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏', 
                                                                           '{user_name}', 
                                                                           '{claim_p[message.chat.id, 'price_event']}',
                                                                           ' ');''')
    con.commit()
    cur.execute(f"SELECT * FROM p{message.chat.id}")
    rowssss = cur.fetchall()
    claim_id = f'{message.chat.id}_{len(rowssss)}'
    ttt = message.text
    cur.execute(f'''INSERT INTO claims (Id, ChatId, Name, Date, State, NameUser, Price, TextC) VALUES 
                                                                                       ('{claim_id}',
                                                                                       '{message.chat.id}',
                                                                                       '{claim_p[message.chat.id, 'name_event']}', 
                                                                                       '{date}', 
                                                                                       '–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏', 
                                                                                       '{user_name}', 
                                                                                       '{claim_p[message.chat.id, 'price_event']}',
                                                                                       '{ttt}');''')
    con.commit()
    key = types.InlineKeyboardMarkup(row_width=1)
    key.add(types.InlineKeyboardButton(text=f"¬´ –ù–∞–∑–∞–¥", callback_data=f"ClbStart"))
    keya = types.InlineKeyboardMarkup(row_width=1)
    keya.add(types.InlineKeyboardButton(text=f"–ù–∞–ø–∏—Å–∞—Ç—å", callback_data=f"ClbSendMessage"))
    bot.send_message(message.chat.id,
                     '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ! –í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!',
                     reply_markup=key)
    claim_a['admin_claim_id'] = claim_id
    claim_a['admin_chat_id'] = message.chat.id
    claim_a['admin_chat_date'] = date
    for o in admins:
        bot.send_message(int(o), f'–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!!!'
                                 f'\n\n–ü—Ä–æ–≥—É–ª–∫–∞: {claim_p[message.chat.id, "name_event"]}'
                                 f'\n–î–∞—Ç–∞: {date}'
                                 f'\n–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_name}'
                                 f'\n–¶–µ–Ω–∞: {claim_p[message.chat.id, "price_event"]}'
                                 f'\n\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {ttt}', reply_markup=keya)
    dbworker.set_state(message.chat.id, config.States.S_START.value)


# –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ----- –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ----- –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ----- –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ----- –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
@bot.message_handler(func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.WFMesT.value)
def user_age(message):
    text = message.text
    cur.execute(f'''SELECT ChatId FROM claims WHERE Id = '{claim_a['admin_claim_id']}';''')
    rows = cur.fetchone()
    bot.send_message(int(rows[0]), text)
    cur.execute(
        f'''UPDATE p{claim_a['admin_chat_id']} SET AnswerAdmin = '{text}' WHERE Date = '{claim_a['admin_chat_date']}';''')
    con.commit()
    dbworker.set_state(message.chat.id, config.States.S_START.value)


# –ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ_–Ω–∞–∑–≤–∞–Ω–∏–µ ----- –ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ_–Ω–∞–∑–≤–∞–Ω–∏–µ ----- –ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ_–Ω–∞–∑–≤–∞–Ω–∏–µ ----- –ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ_–Ω–∞–∑–≤–∞–Ω–∏–µ ----- –ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ_–Ω–∞–∑–≤–∞–Ω–∏–µ
@bot.message_handler(func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.NewEventName.value)
def user_age(message):
    new_event[message.chat.id, 'name'] = message.text
    bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è...')
    dbworker.set_state(message.chat.id, config.States.NewEventText.value)


# –ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ_–æ–ø–∏—Å–∞–Ω–∏–µ ----- –ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ_–æ–ø–∏—Å–∞–Ω–∏–µ ----- –ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ_–æ–ø–∏—Å–∞–Ω–∏–µ ----- –ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ_–æ–ø–∏—Å–∞–Ω–∏–µ ----- –ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ_–æ–ø–∏—Å–∞–Ω–∏–µ
@bot.message_handler(func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.NewEventText.value)
def user_age(message):
    new_event[message.chat.id, 'text'] = message.text
    bot.send_message(message.chat.id, '–ö–∞–∫–∞—è —Ü–µ–Ω–∞ –æ–¥–Ω–æ–≥–æ –±–∏–ª–µ—Ç–∞ –Ω–∞ –¥–∞–Ω–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ? (–ö–æ–ª-–≤–æ: 1 —à—Ç)')
    dbworker.set_state(message.chat.id, config.States.NewEventPrice.value)


# –ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ_—Ü–µ–Ω–∞ ----- –ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ_—Ü–µ–Ω–∞ ----- –ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ_—Ü–µ–Ω–∞ ----- –ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ_—Ü–µ–Ω–∞ ----- –ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ_—Ü–µ–Ω–∞
@bot.message_handler(func=lambda message: dbworker.get_current_state(message.chat.id) == config.States.NewEventPrice.value)
def user_age(message):
    new_event[message.chat.id, 'price'] = message.text
    cur.execute(f'''INSERT INTO events (Id, Name, Text, ImgName, Price) VALUES 
                                                            ('{datetime.datetime.now()}',
                                                            '{new_event[message.chat.id, "name"]}',
                                                            '{new_event[message.chat.id, "text"]}',
                                                            ' ',
                                                            '{new_event[message.chat.id, "price"]}');''')
    con.commit()
    key = types.InlineKeyboardMarkup(row_width=1)
    key.add(types.InlineKeyboardButton(text=f"¬´ –ù–∞–∑–∞–¥", callback_data=f"ClbEvents-A"))
    bot.send_message(message.chat.id, f'–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ!!!'
                         f'\n\n–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏: {new_event[message.chat.id, "name"]}'
                         f'\n–û–ø–∏—Å–∞–Ω–∏–µ: {new_event[message.chat.id, "text"]}'
                         f'\n–¶–µ–Ω–∞: {new_event[message.chat.id, "price"]}‚ÇΩ', reply_markup=key)
    dbworker.set_state(message.chat.id, config.States.S_START.value)


# Callback ----- Callback ----- Callback ----- Callback ----- Callback
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    cur.execute(f'''CREATE TABLE IF NOT EXISTS p{call.message.chat.id}
                                                                 (Name TEXT,
                                                                 Date TEXT,
                                                                 State TEXT,
                                                                 NameUser TEXT, 
                                                                 Price INT, 
                                                                 AnswerAdmin TEXT);''')
    con.commit()


    # –°—Ç–∞—Ä—Ç callback ----- –°—Ç–∞—Ä—Ç callback ----- –°—Ç–∞—Ä—Ç callback ----- –°—Ç–∞—Ä—Ç callback ----- –°—Ç–∞—Ä—Ç callback
    if call.data == 'ClbStart':
        if call.message.chat.id in admins:
            buttons = [
                types.InlineKeyboardButton(text="–ü—Ä–æ–≥—É–ª–∫–∏", callback_data="ClbEvents-A"),
                types.InlineKeyboardButton(text="–í—Å–µ –∑–∞—è–≤–∫–∏", callback_data="ClbClaims-A"),
                types.InlineKeyboardButton(text="–ë–æ—Ç", callback_data="ClbBot-A")
            ]
            keyboard = types.InlineKeyboardMarkup(row_width=1)
            keyboard.add(*buttons)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text='–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –ü–æ –∫–Ω–æ–ø–∫–µ "–ë–æ—Ç" –º–æ–∂–Ω–æ –∑–∞–π—Ç–∏ –≤ –±–æ—Ç–∞, –∫–∞–∫ –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å...',
                reply_markup=keyboard)
        else:
            cur.execute("SELECT * FROM events")
            rows = cur.fetchall()
            EventsNames = ''
            for i in range(len(rows)):
                EventsNames += f'{rows[i][1]}\n'
            buttons = [
                types.InlineKeyboardButton(text="–ü—Ä–∞–π—Å", callback_data="ClbEvents"),
                types.InlineKeyboardButton(text="–ü–æ–º–æ—â—å", callback_data="ClbHelp"),
                types.InlineKeyboardButton(text="–ú–æ–∏ –∑–∞—è–≤–∫–∏", callback_data="ClbClaims")
            ]
            keyboard = types.InlineKeyboardMarkup(row_width=1)
            keyboard.add(*buttons)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text=f' üëãüèª <b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –Ø GAGRASUPbot.</b>'
                                          f' –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –Ω–æ–≤—ã–π —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –º–∏—Ä –º–æ—Ä—Å–∫–∏—Ö –ø—Ä–æ–≥—É–ª–æ–∫. '
                                          f'–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –Ω–∞—à–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–ª—è —Å–µ–±—è —Å–∞–º–æ–µ –ª—É—á—à–µ–µ'
                                          f'\n\n <b>–°–∞–ø–±–æ—Ä–¥–∏–Ω–≥</b> <em>‚Äî –∏–º–µ–Ω–Ω–æ —Ç–æ—Ç –≤–∏–¥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–π '
                                          f'–ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è –∞–±—Å–æ–ª—é—Ç–Ω–æ –≤—Å–µ–º, —ç—Ç–æ –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –≤–∏–¥ '
                                          f'–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ –¥—É—à–µ –∏ –≤–∑—Ä–æ—Å–ª—ã–º, –∏ –¥–µ—Ç—è–º. –ú–Ω–æ–≥–∏–µ —Ö–æ—Ç—è—Ç '
                                          f'–ø—Ä–æ—Å—Ç–æ –∫–∞—Ç–∞—Ç—å—Å—è –ø–æ –º–æ—Ä—é, –ø–æ —Ä–µ–∫–µ, –≤—Å—Ç—Ä–µ—á–∞—Ç—å —Ä–∞—Å—Å–≤–µ—Ç—ã –∏ –∑–∞–≥–æ—Ä–∞—Ç—å. '
                                          f'\n–ù–∏–∫–∞–∫–æ–≥–æ —ç–∫—Å—Ç—Ä–∏–º–∞.</em>'
                                          f'\n\n–ò–ù–°–¢–†–£–ö–¢–ê–ñ –ò –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨'
                                          f'\n –£ –Ω–∞—Å —Ç–æ–ª—å–∫–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏ –±—Ä–µ–Ω–¥–æ–≤—ã–µ —Å–∞–ø–±–æ—Ä–¥—ã Stormline, Bombitto –∏ –¥—Ä—É–≥–∏–µ.'
                                          f'\n\n –ì–∏–¥ –ø—Ä–æ–≤–æ–¥–∏—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂ –ø–µ—Ä–µ–¥ —Å–ø–ª–∞–≤–æ–º, –≤—ã–¥–∞–µ—Ç —Å–ø–∞—Å–∞—Ç–µ–ª—å–Ω—ã–µ '
                                          f'–∂–∏–ª–µ—Ç—ã, –≤–æ–¥–æ–Ω–µ–ø—Ä–æ–Ω–∏—Ü–∞–µ–º—ã–µ —á–µ—Ö–ª—ã –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤. '
                                          f'\n\n <em>*–ü—Ä–∏ –Ω–µ–±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã—Ö –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö –≤–æ–∑–º–æ–∂–µ–Ω –ø–µ—Ä–µ–Ω–æ—Å –ø—Ä–æ–≥—É–ª–∫–∏</em>'
                                          f'\n\n<b>–ü–†–û–ö–ê–¢ ‚Ä¢ –ü–†–û–ì–£–õ–ö–ò ‚Ä¢ –ò–ù–î–ò–í–ò–î–£–ê–õ–¨–ù–´–ï –¢–£–†–´</b>'
                                          f'\n\n<code>–Ω–∞–∂–º–∏—Ç–µ ¬´–ü—Ä–∞–π—Å¬ª –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≥—É–ª–∫—É</code>', parse_mode='html', reply_markup=keyboard)


    # –ü–æ–∫–∞–∑–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ----- –ü–æ–∫–∞–∑–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ----- –ü–æ–∫–∞–∑–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if call.data == 'ClbEvents':
        cur.execute("SELECT * FROM events")
        rows = cur.fetchall()
        buttons = [types.InlineKeyboardButton(text=f"{rows[i][1]}", callback_data=f"ClbEvents{rows[i][0]}") for i in
                   range(len(rows))]
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        keyboard.add(*buttons)
        keyboard.add(types.InlineKeyboardButton(text=f"¬´ –ù–∞–∑–∞–¥", callback_data=f"ClbStart"))
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text='<b>–ü–†–û–ì–£–õ–ö–ò. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç:</b>', parse_mode='html', reply_markup=keyboard)


    # –ü–æ–∫–∞–∑–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–≤–æ–¥ ----- –ü–æ–∫–∞–∑–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–≤–æ–¥ ----- –ü–æ–∫–∞–∑–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–≤–æ–¥
    cur.execute("SELECT * FROM events")
    rows_events = cur.fetchall()
    for i in range(len(rows_events)):
        if call.data == f"ClbEvents{rows_events[i][0]}":
            key = types.InlineKeyboardMarkup(row_width=1)
            key.add(types.InlineKeyboardButton(text=f"–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É", callback_data=f"ClbEventsSend{rows_events[i][0]}"),
                    types.InlineKeyboardButton(text=f"¬´ –ù–∞–∑–∞–¥", callback_data=f"ClbEvents"))
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text=f'{rows_events[i][2]}'
                                       f'\n\n<b>–¶–µ–Ω–∞: {rows_events[i][4]}‚ÇΩ</b>', parse_mode='html', reply_markup=key)


        # –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É ----- –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É ----- –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É ----- –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É ----- –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É
        if call.data == f"ClbEventsSend{rows_events[i][0]}":
            cur.execute(f"SELECT * FROM p{call.message.chat.id}")
            row_sel = cur.fetchall()
            k = 1
            for p in range(len(row_sel)):
                if (row_sel[p][1].split()[0] == f'{datetime.datetime.now()}'.split()[0]) and (
                        rows_events[i][1] == row_sel[p][0]):
                    k = 0
            if k:
                dbworker.set_state(call.message.chat.id, config.States.SendClaim.value)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫ –∑–∞—è–≤–∫–µ –∏ —É–∫–∞–∂–∏—Ç–µ –≤ –Ω–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞/—Å—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º/—Å—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–∫)...')
                claim_p[call.message.chat.id, 'name_event'] = rows_events[i][1]
                claim_p[call.message.chat.id, 'price_event'] = rows_events[i][4]

            else:
                keyss = types.InlineKeyboardMarkup(row_width=1)
                keyss.add(types.InlineKeyboardButton(text=f"¬´ –ù–∞–∑–∞–¥", callback_data=f"ClbStart"))
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text='–ó–∞—è–≤–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ –±—ã—Ç—å –ø–æ–¥–∞–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç! –í—Ç–æ—Ä–æ–π —Ä–∞–∑ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –≤—ã —Å–º–æ–∂–µ—Ç–µ —Ç–æ–ª—å–∫–æ –∑–∞–≤—Ç—Ä–∞!',
                                      reply_markup=keyss)


        # –í—Å–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤—ã–≤–æ–¥ ----- –í—Å–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤—ã–≤–æ–¥ ----- –í—Å–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤—ã–≤–æ–¥ ----- –í—Å–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤—ã–≤–æ–¥ ----- –í—Å–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤—ã–≤–æ–¥
        if call.data == f"ClbEvents{rows_events[i][0].split()[0]}_{rows_events[i][0].split()[1]}-A":
            key = types.InlineKeyboardMarkup(row_width=1)
            key.add(types.InlineKeyboardButton(text=f"–£–¥–∞–ª–∏—Ç—å",
                                               callback_data=f"ClbDelEvent{rows_events[i][0].split()[0]}_{rows_events[i][0].split()[1]}"),
                    types.InlineKeyboardButton(text=f"¬´ –ù–∞–∑–∞–¥", callback_data=f"ClbEvents-A"))
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text=f'{rows_events[i][2]}'
                                         f'\n\n<b>–¶–µ–Ω–∞: {rows_events[i][4]}‚ÇΩ</b>', parse_mode='html', reply_markup=key)


        # –£–¥–∞–ª–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ----- –£–¥–∞–ª–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ----- –£–¥–∞–ª–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ----- –£–¥–∞–ª–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ----- –£–¥–∞–ª–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
        if call.data == f"ClbDelEvent{rows_events[i][0].split()[0]}_{rows_events[i][0].split()[1]}":
            cur.execute(f'''DELETE FROM events WHERE Id = '{rows_events[i][0]}';''')
            con.commit()
            key = types.InlineKeyboardMarkup(row_width=1)
            key.add(types.InlineKeyboardButton(text=f"¬´ –ù–∞–∑–∞–¥", callback_data=f"ClbEvents-A"))
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text='–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —É–¥–∞–ª–µ–Ω–æ!', reply_markup=key)



    # –í—Å–µ –∑–∞—è–≤–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ----- –í—Å–µ –∑–∞—è–≤–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ----- –í—Å–µ –∑–∞—è–≤–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ----- –í—Å–µ –∑–∞—è–≤–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ----- –í—Å–µ –∑–∞—è–≤–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if call.data == 'ClbClaims':
        cur.execute(f"SELECT * FROM p{call.message.chat.id}")
        rows = cur.fetchall()
        buttons = [types.InlineKeyboardButton(text=f"{rows[i][0]} ({'.'.join(rows[i][1].split()[0].split('-')[::-1])})",
                                              callback_data=f"ClbEvents{rows[i][1].split()[0]}_{rows[i][1].split()[1]}")
                   for i in range(len(rows))]
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        keyboard.add(*buttons)
        text = '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—É–ª–∫–∏:'
        if buttons == []:
            text = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞—è–≤–æ–∫((( ' \
                   '\n\n<code>–ß—Ç–æ–±—ã –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞–∂–º–∏—Ç–µ ¬´–ü—Ä–∞–π—Å¬ª –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≥—É–ª–∫—É</code>'
            keyboard.add(types.InlineKeyboardButton(text=f"–ü—Ä–∞–π—Å", callback_data=f"ClbEvents"))
        keyboard.add(types.InlineKeyboardButton(text=f"¬´ –ù–∞–∑–∞–¥", callback_data=f"ClbStart"))
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text=text, parse_mode='html', reply_markup=keyboard)


    # –í—Å–µ –∑–∞—è–≤–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–≤–æ–¥ ----- –í—Å–µ –∑–∞—è–≤–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–≤–æ–¥ ----- –í—Å–µ –∑–∞—è–≤–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–≤–æ–¥ ----- –í—Å–µ –∑–∞—è–≤–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–≤–æ–¥ ----- –í—Å–µ –∑–∞—è–≤–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–≤–æ–¥
    cur.execute(f"SELECT * FROM p{call.message.chat.id}")
    rows_claims_user = cur.fetchall()
    for i in range(len(rows_claims_user)):
        if call.data == f"ClbEvents{rows_claims_user[i][1].split()[0]}_{rows_claims_user[i][1].split()[1]}":
            keydpl = types.InlineKeyboardMarkup(row_width=1)
            keydpl.add(types.InlineKeyboardButton(text=f"¬´ –ù–∞–∑–∞–¥", callback_data=f"ClbClaims"))
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text=f'<b>{rows_claims_user[i][0]}</b>'
                                       f'\n–î–∞—Ç–∞: {".".join(rows_claims_user[i][1].split()[0].split("-")[::-1])}'
                                       f'\n–í—Ä–µ–º—è: {":".join(rows_claims_user[i][1].split()[1].split(":")[0:2])}'
                                       f'\n\n–°—Ç–∞—Ç—É—Å: {rows_claims_user[i][2]}'
                                       f'\n–¶–µ–Ω–∞: {rows_claims_user[i][4]}'
                                       f'\n\n–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {rows_claims_user[i][5]}', parse_mode='html', reply_markup=keydpl)


    # –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ----- –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ----- –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ----- –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ----- –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if call.data == 'ClbSendMessage':
        dbworker.set_state(call.message.chat.id, config.States.WFMesT.value)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text='–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...')


    # –ü—Ä–∞–π—Å / –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è ----- –ü—Ä–∞–π—Å / –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è ----- –ü—Ä–∞–π—Å / –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è ----- –ü—Ä–∞–π—Å / –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è ----- –ü—Ä–∞–π—Å / –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
    if call.data == 'ClbEvents-A':
        cur.execute("SELECT * FROM events")
        rows = cur.fetchall()
        buttons = [types.InlineKeyboardButton(text=f"{rows[i][1]}",
                                              callback_data=f"ClbEvents{rows[i][0].split()[0]}_{rows[i][0].split()[1]}-A")
                   for i in
                   range(len(rows))]
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        keyboard.add(*buttons)
        keyboard.add(types.InlineKeyboardButton(text=f"–°–æ–∑–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ", callback_data=f"ClbNewEvent-A"),
                     types.InlineKeyboardButton(text=f"¬´ –ù–∞–∑–∞–¥", callback_data=f"ClbStart"))
        text = '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—É–ª–∫–∏:'
        if buttons == []:
            text = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –ø–æ–∫–∞ –Ω–µ—Ç!'
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text=text, reply_markup=keyboard)
        dbworker.set_state(call.message.chat.id, config.States.S_START.value)


    # –ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ----- –ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ----- –ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ----- –ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ----- –ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
    if call.data == 'ClbNewEvent-A':
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        keyboard.add(types.InlineKeyboardButton(text=f"¬´ –ù–∞–∑–∞–¥", callback_data=f"ClbEvents-A"))
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text='–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è...', reply_markup=keyboard)
        dbworker.set_state(call.message.chat.id, config.States.NewEventName.value)


    # –í–∏–¥—ã –∑–∞—è–≤–æ–∫ ----- –í–∏–¥—ã –∑–∞—è–≤–æ–∫ ----- –í–∏–¥—ã –∑–∞—è–≤–æ–∫ ----- –í–∏–¥—ã –∑–∞—è–≤–æ–∫ ----- –í–∏–¥—ã –∑–∞—è–≤–æ–∫
    if call.data == 'ClbClaims-A':
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        keyboard.add(types.InlineKeyboardButton(text=f"–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏", callback_data=f"ClbClaimsTrue_0-A"),
                     types.InlineKeyboardButton(text=f"–û–¥–æ–±—Ä–µ–Ω–Ω—ã–µ", callback_data=f"ClbClaimsTrue_2-A"),
                     types.InlineKeyboardButton(text=f"–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ", callback_data=f"ClbClaimsFalse_1-A"),
                     types.InlineKeyboardButton(text=f"–û—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã–µ", callback_data=f"ClbClaimsTrue_3-A"),
                     types.InlineKeyboardButton(text=f"¬´ –ù–∞–∑–∞–¥", callback_data=f"ClbStart"))
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text='–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞—è–≤–æ–∫:', reply_markup=keyboard)


    # –í–∏–¥—ã –∑–∞—è–≤–æ–∫ –≤—ã–≤–æ–¥ ----- –í–∏–¥—ã –∑–∞—è–≤–æ–∫ –≤—ã–≤–æ–¥ ----- –í–∏–¥—ã –∑–∞—è–≤–æ–∫ –≤—ã–≤–æ–¥ ----- –í–∏–¥—ã –∑–∞—è–≤–æ–∫ –≤—ã–≤–æ–¥ ----- –í–∏–¥—ã –∑–∞—è–≤–æ–∫ –≤—ã–≤–æ–¥
    if call.data == 'ClbClaimsTrue_0-A':
        cur.execute("SELECT * FROM claims")
        rows = cur.fetchall()
        buttons = [types.InlineKeyboardButton(text=f"{rows[i][2]} ({'.'.join(rows[i][3].split()[0].split('-')[::-1])})", callback_data=f"ClbClaimTrue{'_'.join(rows[i][3].split()[0].split('-')[::-1])}_{'_'.join(rows[i][3].split()[1].split(':')[0:2])}-A") for i in
                range(len(rows)) if rows[i][4] == '–ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏']
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        keyboard.add(*buttons)
        keyboard.add(types.InlineKeyboardButton(text=f"¬´ –ù–∞–∑–∞–¥", callback_data=f"ClbClaims-A"))
        text = '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—É–ª–∫–∏:'
        if buttons == []:
            text = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç!'
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text=text, reply_markup=keyboard)


    if call.data == 'ClbClaimsTrue_2-A':
        cur.execute("SELECT * FROM claims")
        rows = cur.fetchall()
        buttons = [types.InlineKeyboardButton(text=f"{rows[i][2]} ({'.'.join(rows[i][3].split()[0].split('-')[::-1])})", callback_data=f"ClbClaimTrue{'_'.join(rows[i][3].split()[0].split('-')[::-1])}_{'_'.join(rows[i][3].split()[1].split(':')[0:2])}-A") for i in
                range(len(rows)) if rows[i][4] == '–û–¥–æ–±—Ä–µ–Ω–∞']
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        keyboard.add(*buttons)
        keyboard.add(types.InlineKeyboardButton(text=f"¬´ –ù–∞–∑–∞–¥", callback_data=f"ClbClaims-A"))
        text = '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—É–ª–∫–∏:'
        if buttons == []:
            text = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç!'
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text=text, reply_markup=keyboard)


    if call.data == 'ClbClaimsTrue_3-A':
        cur.execute("SELECT * FROM claims")
        rows = cur.fetchall()
        buttons = [types.InlineKeyboardButton(text=f"{rows[i][2]} ({'.'.join(rows[i][3].split()[0].split('-')[::-1])})", callback_data=f"ClbClaimTrue{'_'.join(rows[i][3].split()[0].split('-')[::-1])}_{'_'.join(rows[i][3].split()[1].split(':')[0:2])}-A") for i in
                range(len(rows)) if rows[i][4] == '–û—Ç–∫–ª–æ–Ω–µ–Ω–∞']
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        keyboard.add(*buttons)
        keyboard.add(types.InlineKeyboardButton(text=f"¬´ –ù–∞–∑–∞–¥", callback_data=f"ClbClaims-A"))
        text = '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—É–ª–∫–∏:'
        if buttons == []:
            text = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç!'
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text=text, reply_markup=keyboard)


    if call.data == 'ClbClaimsFalse_1-A':
        cur.execute("SELECT * FROM claims")
        rows = cur.fetchall()
        buttons = [types.InlineKeyboardButton(text=f"{rows[i][2]} ({'.'.join(rows[i][3].split()[0].split('-')[::-1])})", callback_data=f"ClbClaimTrue{'_'.join(rows[i][3].split()[0].split('-')[::-1])}_{'_'.join(rows[i][3].split()[1].split(':')[0:2])}-A") for i in
                range(len(rows)) if rows[i][4] == '–í—ã–ø–æ–ª–Ω–µ–Ω–∞']
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        keyboard.add(*buttons)
        keyboard.add(types.InlineKeyboardButton(text=f"¬´ –ù–∞–∑–∞–¥", callback_data=f"ClbClaims-A"))
        text = '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—É–ª–∫–∏:'
        if buttons == []:
            text = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç!'
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text=text, reply_markup=keyboard)


    # –í—ã–≤–æ–¥ –∑–∞—è–≤–∫–∏ ----- –í—ã–≤–æ–¥ –∑–∞—è–≤–∫–∏ ----- –í—ã–≤–æ–¥ –∑–∞—è–≤–∫–∏ ----- –í—ã–≤–æ–¥ –∑–∞—è–≤–∫–∏ ----- –í—ã–≤–æ–¥ –∑–∞—è–≤–∫–∏
    cur.execute("SELECT * FROM claims")
    rows_claims = cur.fetchall()
    for i in range(len(rows_claims)):
        if call.data == f"ClbClaimTrue{'_'.join(rows_claims[i][3].split()[0].split('-')[::-1])}_{'_'.join(rows_claims[i][3].split()[1].split(':')[0:2])}-A":
            keyb = types.InlineKeyboardMarkup(row_width=1)
            keyb.add(types.InlineKeyboardButton(text=f"–ü–æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å - –í—ã–ø–æ–ª–Ω–µ–Ω–∞",
                                                callback_data=f"ClbClaimTrue{rows_claims[i][3].split()[0]}_{rows_claims[i][3].split()[1]}-True_1-A"),
                     types.InlineKeyboardButton(text=f"–ü–æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å - –û–¥–æ–±—Ä–µ–Ω–∞",
                                                callback_data=f"ClbClaimTrue{rows_claims[i][3].split()[0]}_{rows_claims[i][3].split()[1]}-True_2-A"),
                     types.InlineKeyboardButton(text=f"–ü–æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å - –û—Ç–∫–ª–æ–Ω–µ–Ω–∞",
                                               callback_data=f"ClbClaimTrue{rows_claims[i][3].split()[0]}_{rows_claims[i][3].split()[1]}-True_3-A"),
                     types.InlineKeyboardButton(text=f"–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∫ –∑–∞—è–≤–∫–µ", callback_data=f"ClbSendMessage"),
                     types.InlineKeyboardButton(text=f"¬´ –ù–∞–∑–∞–¥", callback_data=f"ClbClaims-A"))
            claim_a['admin_claim_id'] = rows_claims[i][0]
            cur.execute(f"SELECT * FROM p{rows_claims[i][1]} WHERE Date = '{rows_claims[i][3]}'")
            r = cur.fetchall()
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text=f'ChatId - {rows_claims[i][1]}'
                                         f'\n\n–ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {rows_claims[i][2]}'
                                         f'\n–î–∞—Ç–∞: {".".join(rows_claims[i][3].split()[0].split("-")[::-1])} –≤ {":".join(rows_claims[i][3].split()[1].split(":")[0:2])}'
                                         f'\n–°—Ç–∞—Ç—É—Å: {rows_claims[i][4]}'
                                         f'\n–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @{rows_claims[i][5]}'
                                         f'\n\n–¶–µ–Ω–∞: {rows_claims[i][6]}'
                                         f'\n\n–°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {r[0][5]}'
                                         f'\n\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {rows_claims[i][7]}', reply_markup=keyb)


        # –°—Ç–∞—Ç—É—Å—ã –∑–∞—è–≤–æ–∫ ----- –°—Ç–∞—Ç—É—Å—ã –∑–∞—è–≤–æ–∫ ----- –°—Ç–∞—Ç—É—Å—ã –∑–∞—è–≤–æ–∫ ----- –°—Ç–∞—Ç—É—Å—ã –∑–∞—è–≤–æ–∫ ----- –°—Ç–∞—Ç—É—Å—ã –∑–∞—è–≤–æ–∫
        if call.data == f"ClbClaimTrue{rows_claims[i][3].split()[0]}_{rows_claims[i][3].split()[1]}-True_1-A":
            cur.execute(f'''UPDATE claims SET State = '–í—ã–ø–æ–ª–Ω–µ–Ω–∞' WHERE Id = '{rows_claims[i][0]}';''')
            con.commit()
            cur.execute(f'''UPDATE p{rows_claims[i][1]} SET State = '–í—ã–ø–æ–ª–Ω–µ–Ω–∞' WHERE Date = '{rows_claims[i][3]}';''')
            con.commit()
            keyb = types.InlineKeyboardMarkup(row_width=1)
            keyb.add(types.InlineKeyboardButton(text=f"¬´ –ù–∞–∑–∞–¥", callback_data=f"ClbClaims-A"))
            bot.send_message(rows_claims[i][1], f'–í–∞—à–∞ –∑–∞—è–≤–∫–∞ "{rows_claims[i][2]}" –æ—Ç '
                                                f'{".".join(rows_claims[i][3].split()[0].split("-")[::-1])} '
                                                f'{":".join(rows_claims[i][3].split()[1].split(":")[0:2])} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!')
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text=f'–£—Å–ø–µ—à–Ω–æ! –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ "{rows_claims[i][2]}" –æ—Ç '
                                                f'{".".join(rows_claims[i][3].split()[0].split("-")[::-1])} '
                                                f'{":".join(rows_claims[i][3].split()[1].split(":")[0:2])} –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ "–í—ã–ø–æ–ª–Ω–µ–Ω–∞"', reply_markup=keyb)


        if call.data == f"ClbClaimTrue{rows_claims[i][3].split()[0]}_{rows_claims[i][3].split()[1]}-True_2-A":
            cur.execute(f'''UPDATE claims SET State = '–û–¥–æ–±—Ä–µ–Ω–∞' WHERE Id = '{rows_claims[i][0]}';''')
            con.commit()
            cur.execute(f'''UPDATE p{rows_claims[i][1]} SET State = '–û–¥–æ–±—Ä–µ–Ω–∞' WHERE Date = '{rows_claims[i][3]}';''')
            con.commit()
            keyb = types.InlineKeyboardMarkup(row_width=1)
            keyb.add(types.InlineKeyboardButton(text=f"¬´ –ù–∞–∑–∞–¥", callback_data=f"ClbClaims-A"))
            bot.send_message(rows_claims[i][1], f'–í–∞—à–∞ –∑–∞—è–≤–∫–∞ "{rows_claims[i][2]}" –æ—Ç '
                                                f'{".".join(rows_claims[i][3].split()[0].split("-")[::-1])} '
                                                f'{":".join(rows_claims[i][3].split()[1].split(":")[0:2])} –æ–¥–æ–±—Ä–µ–Ω–∞!')
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text=f'–£—Å–ø–µ—à–Ω–æ! –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ "{rows_claims[i][2]}" –æ—Ç '
                                                f'{".".join(rows_claims[i][3].split()[0].split("-")[::-1])} '
                                                f'{":".join(rows_claims[i][3].split()[1].split(":")[0:2])} –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ "–û–¥–æ–±—Ä–µ–Ω–∞"', reply_markup=keyb)


        if call.data == f"ClbClaimTrue{rows_claims[i][3].split()[0]}_{rows_claims[i][3].split()[1]}-True_3-A":
            cur.execute(f'''UPDATE claims SET State = '–û—Ç–∫–ª–æ–Ω–µ–Ω–∞' WHERE Id = '{rows_claims[i][0]}';''')
            con.commit()
            cur.execute(f'''UPDATE p{rows_claims[i][1]} SET State = '–û—Ç–∫–ª–æ–Ω–µ–Ω–∞' WHERE Date = '{rows_claims[i][3]}';''')
            con.commit()
            keyb = types.InlineKeyboardMarkup(row_width=1)
            keyb.add(types.InlineKeyboardButton(text=f"¬´ –ù–∞–∑–∞–¥", callback_data=f"ClbClaims-A"))
            bot.send_message(rows_claims[i][1], f'–í–∞—à–∞ –∑–∞—è–≤–∫–∞ "{rows_claims[i][2]}" –æ—Ç '
                                                f'{".".join(rows_claims[i][3].split()[0].split("-")[::-1])} '
                                                f'{":".join(rows_claims[i][3].split()[1].split(":")[0:2])} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!')
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text=f'–£—Å–ø–µ—à–Ω–æ! –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ "{rows_claims[i][2]}" –æ—Ç '
                                                f'{".".join(rows_claims[i][3].split()[0].split("-")[::-1])} '
                                                f'{":".join(rows_claims[i][3].split()[1].split(":")[0:2])} –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ "–û—Ç–∫–ª–æ–Ω–µ–Ω–∞"', reply_markup=keyb)


    # –ü–æ–º–æ—â—å ----- –ü–æ–º–æ—â—å ----- –ü–æ–º–æ—â—å ----- –ü–æ–º–æ—â—å ----- –ü–æ–º–æ—â—å
    if call.data == "ClbHelp":
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        keyboard.add(types.InlineKeyboardButton(text='WhatsApp', url='https://wa.me/+79407120912'),
                     types.InlineKeyboardButton(text='Telegram', url='tg://resolve?domain=simeon_kolchin'),
                     types.InlineKeyboardButton(text='Instagram', url='tg://resolve?domain=simeon_kolchin'),
                     types.InlineKeyboardButton(text=f"¬´ –ù–∞–∑–∞–¥", callback_data=f"ClbStart"))
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text='–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º:', reply_markup=keyboard)

bot.polling(none_stop = True, interval = 0)